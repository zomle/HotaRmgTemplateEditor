<Window x:Class="HotaRmgTemplateEditor.Dialogs.ZoneSettings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HotaRmgTemplateEditor.Dialogs" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:viewmodels="clr-namespace:HotaRmgTemplateEditor.ViewModels" xmlns:usercontrols="clr-namespace:HotaRmgTemplateEditor.UserControls" d:DataContext="{d:DesignInstance Type=viewmodels:ZoneSettingsViewModel}"
        mc:Ignorable="d"
        Title="Zone settings" MinHeight="830" Height="830" MinWidth="850" Width="1220">
    <Window.Resources>
        <Style TargetType="GroupBox">
            <Setter Property="Margin" Value="3,2" />
            <Setter Property="Padding" Value="3,2"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="4,1" />
            <Setter Property="Margin" Value="2,3" />
        </Style>
        
        <Style TargetType="xctk:IntegerUpDown">
            <Setter Property="Margin" Value="2" />
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="2" />
        </Style>
        
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="1"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="154" Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="General"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto" MinWidth="80"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Grid.Column="0">Size</Label>
                    <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" MinWidth="50" HorizontalAlignment="Left" Minimum="1" Maximum="200" Value="{Binding Size}" />

                    <Label Grid.Row="1" Grid.Column="0" Content="Owner">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ZoneType}" Value="Junction">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ZoneType}" Value="Treasure">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ZoneType}" Value="Junction">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ZoneType}" Value="Treasure">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Label Padding="0" VerticalAlignment="Center" Margin="2,0">Player</Label>
                        <xctk:IntegerUpDown  MinWidth="30" HorizontalAlignment="Left" Minimum="1" Maximum="8" Value="{Binding Owner}"/>
                    </StackPanel>

                    <Label Grid.Row="2" Grid.Column="0">Zone ID</Label>
                    <xctk:IntegerUpDown Grid.Row="2" Grid.Column="1" MinWidth="50" HorizontalAlignment="Left" Minimum="1" Maximum="999" Value="{Binding ZoneId}"/>

                    <Label Grid.Row="3" Grid.Column="0">Type</Label>
                    <ComboBox Grid.Row="3" Grid.Column="1" MinWidth="120" HorizontalAlignment="Left" 
                              ItemsSource="{Binding Path=ZoneTypeEnumsWithCaptions}" 
                              DisplayMemberPath="Value" 
                              SelectedValuePath="Key"
                              SelectedValue="{Binding Path=ZoneType, Mode=TwoWay}" />
   
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="1">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Advanced options"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="150"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" Grid.Column="0" Content="Zone repulsion" IsChecked="{Binding ZoneRepulsion}" />
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Padding="0" Margin="1,0,5,0" VerticalAlignment="Center">Placement</Label>
                        <ComboBox Grid.Column="1"
                                  ItemsSource="{Binding Path=ZonePlacementEnumsWithCaption}" 
                                  DisplayMemberPath="Value" 
                                  SelectedValuePath="Key"
                                  SelectedValue="{Binding Path=Placement, Mode=TwoWay}"></ComboBox>
                    </Grid>
                    <CheckBox Grid.Row="2" Grid.Column="0" Content="Allow non-coherent road" IsChecked="{Binding AllowNonCoherentRoad}" />
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="2">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Terrain"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" Margin="1,0,1,5" Content="Match to town" IsChecked="{Binding TerrainMatchToTown}"/>
                    <Grid Grid.Row="1" IsEnabled="{Binding Path=TerrainMatchToTown, Converter={StaticResource InverseBooleanConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Row="0" Grid.Column="0" Content="Dirt" IsChecked="{Binding TerrainDirt}"/>
                        <CheckBox Grid.Row="0" Grid.Column="1" Content="Sand" IsChecked="{Binding TerrainSand}"/>
                        <CheckBox Grid.Row="0" Grid.Column="2" Content="Grass" IsChecked="{Binding TerrainGrass}"/>
                        <CheckBox Grid.Row="1" Grid.Column="0" Content="Snow" IsChecked="{Binding TerrainSnow}"/>
                        <CheckBox Grid.Row="1" Grid.Column="1" Content="Swamp" IsChecked="{Binding TerrainSwamp}"/>
                        <CheckBox Grid.Row="1" Grid.Column="2" Content="Rough" IsChecked="{Binding TerrainRough}"/>
                        <CheckBox Grid.Row="2" Grid.Column="0" Content="Subterranean" IsChecked="{Binding TerrainSubterranean}"/>
                        <CheckBox Grid.Row="2" Grid.Column="1" Content="Lava" IsChecked="{Binding TerrainLava}"/>
                        <CheckBox Grid.Row="2" Grid.Column="2" Content="Highlands" IsChecked="{Binding TerrainHighlands}"/>
                        <CheckBox Grid.Row="3" Grid.Column="0" Content="Wasteland" IsChecked="{Binding TerrainWasteland}"/>
                    </Grid>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" IsEnabled="{Binding Path=TerrainMatchToTown, Converter={StaticResource InverseBooleanConverter}}">
                        <Button Command="{Binding SelectAllTerrainCommand}">Select all</Button>
                        <Button Command="{Binding SelectNoTerrainCommand}">Select none</Button>
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="3" >
                <GroupBox.Header>
                    <TextBlock>
                        <Run FontWeight="Bold">Treasure</Run>
                        <Run Text="(value:"></Run>
                        <Run Text="{Binding TreasureZoneValue, Mode=OneWay}"/>
                        <Run Text=")"/>
                    </TextBlock>
                </GroupBox.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="1" Padding="3,2" VerticalAlignment="Bottom" FontStyle="Italic" Content="Low"/>
                    <Label Grid.Row="0" Grid.Column="2" Padding="3,2" VerticalAlignment="Bottom" FontStyle="Italic" Content="High"/>
                    <Label Grid.Row="0" Grid.Column="3" Padding="3,2" VerticalAlignment="Bottom" FontStyle="Italic" Content="Density"/>

                    <CheckBox Grid.Row="1" Grid.Column="0" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding TreasureEnableRange1}"/>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Minimum="100" Increment="500" Value="{Binding TreasureRange1Low}" />
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="2" Margin="4,2" Minimum="100" Increment="500" Value="{Binding TreasureRange1High}"/>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="3" Minimum="1" Maximum="100"  Value="{Binding TreasureRange1Density}"/>

                    <CheckBox Grid.Row="2" Grid.Column="0" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding TreasureEnableRange2}"/>
                    <xctk:IntegerUpDown Grid.Row="2" Grid.Column="1" Minimum="100" Increment="500" Value="{Binding TreasureRange2Low}"/>
                    <xctk:IntegerUpDown Grid.Row="2" Grid.Column="2" Margin="4,2" Minimum="100" Increment="500" Value="{Binding TreasureRange2High}"/>
                    <xctk:IntegerUpDown Grid.Row="2" Grid.Column="3" Minimum="1" Maximum="100" Value="{Binding TreasureRange2Density}"/>

                    <CheckBox Grid.Row="3" Grid.Column="0" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding TreasureEnableRange3}"/>
                    <xctk:IntegerUpDown Grid.Row="3" Grid.Column="1" Minimum="100" Increment="500" Value="{Binding TreasureRange3Low}"/>
                    <xctk:IntegerUpDown Grid.Row="3" Grid.Column="2" Margin="4,2" Minimum="100" Increment="500" Value="{Binding TreasureRange3High}"/>
                    <xctk:IntegerUpDown Grid.Row="3" Grid.Column="3" Minimum="1" Maximum="100" Value="{Binding TreasureRange3Density}"/>

                    <CheckBox Grid.Row="4" Grid.Column="0" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding TreasureNeutralRewards}"/> 
                    <TextBlock Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="4" Text="Dwellings / creature rewards: only neutral"/>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="4">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Monsters"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Content="Strength"/>
                    <ComboBox Grid.Row="0" Grid.Column="1" MinWidth="80" HorizontalAlignment="Left"
                              ItemsSource="{Binding Path=ZoneMonsterStrengthEnumsWithCaption}" 
                              DisplayMemberPath="Value" 
                              SelectedValuePath="Key"
                              SelectedValue="{Binding Path=MonsterStrength, Mode=TwoWay}"/>

                    <Label Grid.Row="1" Grid.Column="0" Content="Disposition"/>
                    <ComboBox Grid.Row="1" Grid.Column="1" MinWidth="130" HorizontalAlignment="Left"
                              ItemsSource="{Binding Path=ZoneMonsterDispositionEnumsWithCaption}" 
                              DisplayMemberPath="Value" 
                              SelectedValuePath="Key"
                              SelectedValue="{Binding Path=MonsterDisposition, Mode=TwoWay}"/>

                    <Label Grid.Row="2" Grid.Column="0" Content="Joining percent"/>
                    <ComboBox Grid.Row="2" Grid.Column="1" MinWidth="50" HorizontalAlignment="Left"
                              ItemsSource="{Binding Path=ZoneMonsterJoinPercentEnumsWithCaption}" 
                              DisplayMemberPath="Value" 
                              SelectedValuePath="Key"
                              SelectedValue="{Binding Path=MonsterJoinPercent, Mode=TwoWay}"/>

                    <CheckBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="1,0,1,8" Content="Join only for money" IsChecked="{Binding MonsterJoinOnlyForMoney}" />
                    <CheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="1,0,1,5" Content="Match to town" IsChecked="{Binding MonsterMatchToTown}"/>
                    <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" IsEnabled="{Binding Path=MonsterMatchToTown, Converter={StaticResource InverseBooleanConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Row="0" Grid.Column="0" Content="Neutral" IsChecked="{Binding MonsterNeutral}" />
                        <CheckBox Grid.Row="0" Grid.Column="1" Content="Castle" IsChecked="{Binding MonsterCastle}" />
                        <CheckBox Grid.Row="0" Grid.Column="2" Content="Rampart" IsChecked="{Binding MonsterRampart}" />
                        <CheckBox Grid.Row="1" Grid.Column="0" Content="Tower" IsChecked="{Binding MonsterTower}" />
                        <CheckBox Grid.Row="1" Grid.Column="1" Content="Inferno" IsChecked="{Binding MonsterInferno}" />
                        <CheckBox Grid.Row="1" Grid.Column="2" Content="Necropolis" IsChecked="{Binding MonsterNecropolis}" />
                        <CheckBox Grid.Row="2" Grid.Column="0" Content="Dungeon" IsChecked="{Binding MonsterDungeon}" />
                        <CheckBox Grid.Row="2" Grid.Column="1" Content="Stronghold" IsChecked="{Binding MonsterStronghold}" />
                        <CheckBox Grid.Row="2" Grid.Column="2" Content="Fortress" IsChecked="{Binding MonsterFortress}" />
                        <CheckBox Grid.Row="3" Grid.Column="0" Content="Conflux" IsChecked="{Binding MonsterConflux}" />
                        <CheckBox Grid.Row="3" Grid.Column="1" Content="Cove" IsChecked="{Binding MonsterCove}" />
                    </Grid>
                    <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" IsEnabled="{Binding Path=MonsterMatchToTown, Converter={StaticResource InverseBooleanConverter}}">
                        <Button Command="{Binding SelectAllMonstersCommand}">Select all</Button>
                        <Button Command="{Binding SelectNoMonsterCommand}">Select none</Button>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Restrictions"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" Content="Put condition on zone existence" IsChecked="{Binding RestConditionalExistence}" />
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="Human positions:"/>
                        <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Minimum="1" Maximum="8" Value="{Binding RestMinHumanPlayers}" />
                        <Label Grid.Row="0" Grid.Column="2" Content="to"/>
                        <xctk:IntegerUpDown Grid.Row="0" Grid.Column="3" Minimum="1" Maximum="8" Value="{Binding RestMaxHumanPlayers}" />

                        <Label Grid.Row="1" Grid.Column="0" Content="Total positions:"/>
                        <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Minimum="1" Maximum="8" Value="{Binding RestMinTotalPlayers}" />
                        <Label Grid.Row="1" Grid.Column="2" Content="to"/>
                        <xctk:IntegerUpDown Grid.Row="1" Grid.Column="3" Minimum="1" Maximum="8" Value="{Binding RestMaxTotalPlayers}" />
                    </Grid>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="1">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Player towns &amp; castles"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" MinWidth="50" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Content="Minimum towns"/>
                    <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Minimum="0" Maximum="48" Value="{Binding PlayerMinTowns}" />
                    <Label Grid.Row="1" Grid.Column="0" Content="Towns density"/>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding PlayerTownDensity}" />

                    <Label Grid.Row="2" Grid.Column="0" Content="Minimum castles"/>
                    <xctk:IntegerUpDown Grid.Row="2" Grid.Column="1" Minimum="0" Maximum="48" Value="{Binding PlayerMinCastles}" />
                    <Label Grid.Row="3" Grid.Column="0" Content="Castles density"/>
                    <xctk:IntegerUpDown Grid.Row="3" Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding PlayerCastleDensity}" />
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="2">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Neutral towns &amp; castles"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" MinWidth="50" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Content="Minimum towns"/>
                    <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Minimum="0" Maximum="48" Value="{Binding NeutralMinTowns}" />
                    <Label Grid.Row="1" Grid.Column="0" Content="Towns density"/>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding NeutralTownDensity}" />

                    <Label Grid.Row="2" Grid.Column="0" Content="Minimum castles"/>
                    <xctk:IntegerUpDown Grid.Row="2" Grid.Column="1" Minimum="0" Maximum="48" Value="{Binding NeutralMinCastles}" />
                    <Label Grid.Row="3" Grid.Column="0" Content="Castles density"/>
                    <xctk:IntegerUpDown Grid.Row="3" Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding NeutralCastleDensity}" />

                    <CheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Content="All towns/castles have same type" IsChecked="{Binding NeutralTownsSameType}"/>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="3">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Allowed towns"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Row="0" Grid.Column="0" Content="Castle" IsChecked="{Binding AllowedCastle}" />
                    <CheckBox Grid.Row="0" Grid.Column="1" Content="Rampart" IsChecked="{Binding AllowedRampart}" />
                    <CheckBox Grid.Row="1" Grid.Column="0" Content="Tower" IsChecked="{Binding AllowedTower}" />
                    <CheckBox Grid.Row="1" Grid.Column="1" Content="Inferno" IsChecked="{Binding AllowedInferno}" />
                    <CheckBox Grid.Row="2" Grid.Column="0" Content="Necropolis" IsChecked="{Binding AllowedNecropolis}" />
                    <CheckBox Grid.Row="2" Grid.Column="1" Content="Dungeon" IsChecked="{Binding AllowedDungeon}" />
                    <CheckBox Grid.Row="3" Grid.Column="0" Content="Stronghold" IsChecked="{Binding AllowedStronghold}" />
                    <CheckBox Grid.Row="3" Grid.Column="1" Content="Fortress" IsChecked="{Binding AllowedFortress}" />
                    <CheckBox Grid.Row="4" Grid.Column="0" Content="Conflux" IsChecked="{Binding AllowedConflux}" />
                    <CheckBox Grid.Row="4" Grid.Column="1" Content="Cove" IsChecked="{Binding AllowedCove}" />
                    <StackPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Command="{Binding SelectAllTownsCommand}">Select all</Button>
                        <Button Command="{Binding SelectNoTownCommand}">Select none</Button>
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="4">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Mines"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Padding="3,2" VerticalAlignment="Bottom" FontStyle="Italic" Content="Type"/>
                    <Label Grid.Row="0" Grid.Column="1" Padding="3,2" VerticalAlignment="Bottom" FontStyle="Italic" Content="Min count"/>
                    <Label Grid.Row="0" Grid.Column="2" Padding="3,2" VerticalAlignment="Bottom" FontStyle="Italic" Content="Density"/>

                    <Label Grid.Row="1" Grid.Column="0" Content="Wood"/>
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Width="50" Minimum="0" Maximum="100" Value="{Binding MineMinWood}" />
                    <xctk:IntegerUpDown Grid.Row="1" Grid.Column="2" Width="50" Minimum="0" Maximum="100" Value="{Binding MineDensityWood}" />

                    <Label Grid.Row="2" Grid.Column="0" Content="Ore"/>
                    <xctk:IntegerUpDown Grid.Row="2" Grid.Column="1" Width="50" Minimum="0" Maximum="100" Value="{Binding MineMinOre}" />
                    <xctk:IntegerUpDown Grid.Row="2" Grid.Column="2" Width="50" Minimum="0" Maximum="100" Value="{Binding MineDensityOre}" />

                    <Label Grid.Row="3" Grid.Column="0" Content="Mercury"/>
                    <xctk:IntegerUpDown Grid.Row="3" Grid.Column="1" Width="50" Minimum="0" Maximum="100" Value="{Binding MineMinMercury}" />
                    <xctk:IntegerUpDown Grid.Row="3" Grid.Column="2" Width="50" Minimum="0" Maximum="100" Value="{Binding MineDensityMercury}" />

                    <Label Grid.Row="4" Grid.Column="0" Content="Sulfur"/>
                    <xctk:IntegerUpDown Grid.Row="4" Grid.Column="1" Width="50" Minimum="0" Maximum="100" Value="{Binding MineMinSulfur}" />
                    <xctk:IntegerUpDown Grid.Row="4" Grid.Column="2" Width="50" Minimum="0" Maximum="100" Value="{Binding MineDensitySulfur}" />

                    <Label Grid.Row="5" Grid.Column="0" Content="Crystal"/>
                    <xctk:IntegerUpDown Grid.Row="5" Grid.Column="1" Width="50" Minimum="0" Maximum="100" Value="{Binding MineMinCrystal}" />
                    <xctk:IntegerUpDown Grid.Row="5" Grid.Column="2" Width="50" Minimum="0" Maximum="100" Value="{Binding MineDensityCrystal}" />

                    <Label Grid.Row="6" Grid.Column="0" Content="Gems"/>
                    <xctk:IntegerUpDown Grid.Row="6" Grid.Column="1" Width="50" Minimum="0" Maximum="100" Value="{Binding MineMinGems}" />
                    <xctk:IntegerUpDown Grid.Row="6" Grid.Column="2" Width="50" Minimum="0" Maximum="100" Value="{Binding MineDensityGems}" />

                    <Label Grid.Row="7" Grid.Column="0" Content="Gold"/>
                    <xctk:IntegerUpDown Grid.Row="7" Grid.Column="1" Width="50" Minimum="0" Maximum="100" Value="{Binding MineMinGold}" />
                    <xctk:IntegerUpDown Grid.Row="7" Grid.Column="2" Width="50" Minimum="0" Maximum="100" Value="{Binding MineDensityGold}" />
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="200"/>
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Object rules"/>
                </GroupBox.Header>
                <usercontrols:ObjectRuleList DataContext="{Binding ObjectRules}"/>
            </GroupBox>
            <GroupBox Grid.Row="1">
                <GroupBox.Header>
                    <TextBlock  FontWeight="Bold" Text="Town type hint"/>
                </GroupBox.Header>
                <Grid>
                    <Grid.Resources>
                        <ResourceDictionary>
                            <Style TargetType="Button">
                                <Setter Property="Margin" Value="4" />
                                <Setter Property="Padding" Value="3" />
                            </Style>
                        </ResourceDictionary>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ListView Grid.Row="0" x:Name="lstTownTypeHints" ItemsSource="{Binding TownTypeHints}" SelectedItem="{Binding SelectedTownTypeHint}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="65" Header="Formula" DisplayMemberBinding="{Binding Formula}" />
                                <GridViewColumn Width="560"  Header="Description" DisplayMemberBinding="{Binding Description}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Command="{Binding AddTownHintCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource IconAdd}"/>
                                    <TextBlock Margin="3,0" Text="Add"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Command="{Binding EditTownHintCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource IconEdit}"/>
                                    <TextBlock Margin="3,0" Text="Edit"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button CommandParameter="{Binding ElementName=lstTownTypeHints, Path=SelectedItems}" Command="{Binding DeleteTownHintCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource IconDelete}"/>
                                    <TextBlock Margin="3,0" Text="Delete"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Command="{Binding CopyTownHintCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource IconCopy}"/>
                                    <TextBlock Margin="3,0" Text="Copy"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Command="{Binding PasteTownHintCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource IconPaste}"/>
                                    <TextBlock Margin="3,0" Text="Paste"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Command="{Binding CutTownHintCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource IconCut}"/>
                                    <TextBlock Margin="3,0" Text="Cut"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Margin="4,4,0,4" Command="{Binding DuplicateTownHintCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource IconDuplicate}"/>
                                    <TextBlock Margin="3,0" Text="Duplicate"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>
        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Margin="4,0,5,5" Padding="6,3" Content="Ok"/>
            <Button Margin="4,0,5,5" Padding="6,3" Content="Cancel"/>
        </StackPanel>
    </Grid>
</Window>
